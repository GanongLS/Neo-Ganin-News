---- Base app schema


-- User
CREATE TYPE user_typ AS ENUM ('Sys', 'User');

CREATE TABLE "user" (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  username varchar(128) NOT NULL UNIQUE,
  typ user_typ NOT NULL DEFAULT 'User',

  -- Auth
  pwd varchar(256),
  pwd_salt uuid NOT NULL DEFAULT gen_random_uuid(),
  token_salt uuid NOT NULL DEFAULT gen_random_uuid(),

  -- Timestamps
  cid bigint NOT NULL,
  ctime timestamp with time zone NOT NULL,
  mid bigint NOT NULL,
  mtime timestamp with time zone NOT NULL  
);

-- Agent

CREATE TABLE agent (
  -- PK
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  -- FKs
  owner_id BIGINT NOT NULL,

  -- Properties
  name varchar(256) NOT NULL,
  ai_provider varchar(256) NOT NULL default 'dev', -- For now only support 'dev' provider
  ai_model varchar(256) NOT NULL default 'parrot', -- For now only support 'parrot' model

  -- Timestamps
  cid bigint NOT NULL,
  ctime timestamp with time zone NOT NULL,
  mid bigint NOT NULL,
  mtime timestamp with time zone NOT NULL  
);

-- Conv
CREATE TYPE conv_kind AS ENUM ('OwnerOnly', 'MultiUsers');

CREATE TYPE conv_state AS ENUM ('Active', 'Archived');

CREATE TABLE conv (
  -- PK
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  -- FKs
  owner_id BIGINT NOT NULL,
  agent_id BIGINT NOT NULL,

  -- Properties
  title varchar(256),
  kind conv_kind NOT NULL default 'OwnerOnly',
  state conv_state NOT NULL default 'Active',

  -- Timestamps
  cid bigint NOT NULL,
  ctime timestamp with time zone NOT NULL,
  mid bigint NOT NULL,
  mtime timestamp with time zone NOT NULL  
);

ALTER TABLE conv ADD CONSTRAINT fk_conv_agent
  FOREIGN KEY (agent_id) REFERENCES "agent"(id)
  ON DELETE CASCADE;


-- Conv Participants
CREATE TABLE conv_user (
  -- PK
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  -- Properties / FKs
  conv_id BIGINT NOT NULL,
  user_id BIGINT NOT NULL, 

  -- Machine User Properties
  auto_respond BOOLEAN NOT NULL DEFAULT false,

  -- Timestamps
  cid bigint NOT NULL,
  ctime timestamp with time zone NOT NULL,
  mid bigint NOT NULL,
  mtime timestamp with time zone NOT NULL    
);

-- Conv Messages
CREATE TABLE conv_msg (
  -- PK
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,

  -- FKs
  conv_id BIGINT NOT NULL,
  user_id BIGINT NOT NULL, -- should be came as cid

  -- Properties
  content varchar(1024) NOT NULL,

  -- Timestamps
  cid bigint NOT NULL,
  ctime timestamp with time zone NOT NULL,
  mid bigint NOT NULL,
  mtime timestamp with time zone NOT NULL
);

ALTER TABLE conv_msg ADD CONSTRAINT fk_conv_msg_conv
  FOREIGN KEY (conv_id) REFERENCES "conv"(id)
  ON DELETE CASCADE;

ALTER TABLE conv_user ADD CONSTRAINT fk_conv_user_conv
  FOREIGN KEY (user_id) REFERENCES "user"(id)
  ON DELETE CASCADE;


-- Ganin news DB related 

CREATE TABLE categories (
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
    name VARCHAR(256) NOT NULL,
    description TEXT,
    parent_id INTEGER REFERENCES categories(id),
    is_featured BOOLEAN NOT NULL
);

CREATE TYPE APPROVAL_STATE AS ENUM (
    'Draft',
    'RequestApproval',
    'ApprovalPending',
    'Approved'
);

CREATE TABLE articles (
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    category_id INTEGER REFERENCES categories(id),
    author_id SMALLINT NOT NULL,
    version SMALLINT NOT NULL,
    approval_state APPROVAL_STATE NOT NULL,
    approved_by SMALLINT,
    publication_date TIMESTAMP,
    tags VARCHAR(255)[],
    is_featured BOOLEAN NOT NULL,
    views INTEGER NOT NULL,
    image_url VARCHAR(255),
    meta_description TEXT,
    meta_keywords VARCHAR(255)[],
    likes INTEGER NOT NULL
);

CREATE TABLE comments (
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
    article_id INTEGER REFERENCES articles(id),
    user_id BIGINT REFERENCES "user"(id),
    content TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL
);

ALTER TABLE categories
ADD CONSTRAINT fk_categories_parent_id
FOREIGN KEY (parent_id) REFERENCES categories(id);

ALTER TABLE articles
ADD CONSTRAINT fk_articles_category_id
FOREIGN KEY (category_id) REFERENCES categories(id);

ALTER TABLE comments
ADD CONSTRAINT fk_comments_article_id
FOREIGN KEY (article_id) REFERENCES articles(id);

ALTER TABLE "user"
ADD CONSTRAINT fk_user_cid
FOREIGN KEY (cid) REFERENCES "user"(id),
ADD CONSTRAINT fk_user_mid
FOREIGN KEY (mid) REFERENCES "user"(id);

ALTER TABLE comments
ADD CONSTRAINT fk_comments_user_id
FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE;


CREATE TABLE author (
    user_id BIGINT PRIMARY KEY REFERENCES "user"(id),
    full_name VARCHAR(255),
    pen_name VARCHAR(255) NOT NULL,
    bio TEXT,
    website VARCHAR(255),
    avatar_url VARCHAR(255),
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);