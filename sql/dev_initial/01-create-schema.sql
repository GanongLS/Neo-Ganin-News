---- Base app schema
-- User
CREATE TYPE user_typ AS ENUM ('Sys', 'User');

CREATE TABLE "user" (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  username VARCHAR(128) NOT NULL UNIQUE,
  email VARCHAR(255) NOT NULL UNIQUE,
  first_name VARCHAR(128) NOT NULL,
  last_name VARCHAR(128) NOT NULL,
  typ user_typ NOT NULL DEFAULT 'User',
  -- Auth
  pwd VARCHAR(256),
  pwd_salt UUID NOT NULL DEFAULT gen_random_uuid(),
  token_salt UUID NOT NULL DEFAULT gen_random_uuid(),
  -- Timestamps
  creator_id BIGINT NOT NULL,
  creation_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updater_id BIGINT NOT NULL,
  updated_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE "user"
ADD CONSTRAINT fk_creator_id FOREIGN KEY (creator_id) REFERENCES "user"(id),
  ADD CONSTRAINT fk_updater_id FOREIGN KEY (updater_id) REFERENCES "user"(id);

-- Agent
CREATE TABLE agent (
  -- PK
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  -- FKs
  owner_id BIGINT NOT NULL,
  -- Properties
  name VARCHAR(256) NOT NULL,
  ai_provider VARCHAR(256) NOT NULL DEFAULT 'dev',
  -- For now only support 'dev' provider
  ai_model VARCHAR(256) NOT NULL DEFAULT 'parrot',
  -- For now only support 'parrot' model
  -- Timestamps
  creator_id BIGINT NOT NULL,
  creation_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updater_id BIGINT NOT NULL,
  updated_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Conv
CREATE TYPE conv_kind AS ENUM ('OwnerOnly', 'MultiUsers');

CREATE TYPE conv_state AS ENUM ('Active', 'Archived');

CREATE TABLE conv (
  -- PK
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  -- FKs
  owner_id BIGINT NOT NULL,
  agent_id BIGINT NOT NULL,
  -- Properties
  title VARCHAR(256),
  kind conv_kind NOT NULL DEFAULT 'OwnerOnly',
  state conv_state NOT NULL DEFAULT 'Active',
  -- Timestamps
  creator_id BIGINT NOT NULL,
  creation_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updater_id BIGINT NOT NULL,
  updated_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE conv
ADD CONSTRAINT fk_conv_agent FOREIGN KEY (agent_id) REFERENCES "agent"(id) ON DELETE CASCADE;

-- Conv Participants
CREATE TABLE conv_user (
  -- PK
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  -- Properties / FKs
  conv_id BIGINT NOT NULL,
  user_id BIGINT NOT NULL,
  -- Machine User Properties
  auto_respond BOOLEAN NOT NULL DEFAULT FALSE,
  -- Timestamps
  creator_id BIGINT NOT NULL,
  creation_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updater_id BIGINT NOT NULL,
  updated_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Conv Messages
CREATE TABLE conv_msg (
  -- PK
  id BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  -- FKs
  conv_id BIGINT NOT NULL,
  user_id BIGINT NOT NULL,
  -- Convert cid to user_id
  -- Properties
  content VARCHAR(1024) NOT NULL,
  -- Timestamps
  creator_id BIGINT NOT NULL,
  -- Convert cid to creator_id
  creation_time TIMESTAMP WITH TIME ZONE NOT NULL,
  -- Convert ctime to creation_time
  updater_id BIGINT NOT NULL,
  updated_time TIMESTAMP WITH TIME ZONE NOT NULL -- Convert mtime to updated_time
);

ALTER TABLE conv_msg
ADD CONSTRAINT fk_conv_msg_conv FOREIGN KEY (conv_id) REFERENCES "conv"(id) ON DELETE CASCADE;

ALTER TABLE conv_user
ADD CONSTRAINT fk_conv_user_conv FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE;

-- Ganin news DB related 
CREATE TABLE categories (
  id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  name VARCHAR(256) NOT NULL,
  description TEXT,
  parent_id INTEGER REFERENCES categories(id),
  -- Set default value to false
  is_featured BOOLEAN NOT NULL DEFAULT FALSE,
  -- Timestamp
  creator_id BIGINT NOT NULL,
  creation_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updater_id BIGINT NOT NULL,
  updated_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TYPE APPROVAL_STATE AS ENUM (
  'Draft',
  'RequestApproval',
  'ApprovalPending',
  'Approved'
);

CREATE TABLE articles (
  id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  content TEXT NOT NULL,
  category_id INTEGER REFERENCES categories(id),
  author_id SMALLINT NOT NULL,
  VERSION SMALLINT NOT NULL,
  approval_state APPROVAL_STATE NOT NULL,
  approver_id SMALLINT,
  approval_time TIMESTAMP,
  publication_date TIMESTAMP,
  tags VARCHAR(255) [],
  is_featured BOOLEAN NOT NULL,
  views INTEGER NOT NULL,
  image_url VARCHAR(255),
  likes INTEGER NOT NULL
);

CREATE TABLE comments (
  id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1000) PRIMARY KEY,
  article_id INTEGER REFERENCES articles(id),
  user_id BIGINT REFERENCES "user"(id),
  content TEXT NOT NULL,
  creation_time TIMESTAMP NOT NULL
);

ALTER TABLE categories
ADD CONSTRAINT fk_categories_parent_id FOREIGN KEY (parent_id) REFERENCES categories(id);

ALTER TABLE articles
ADD CONSTRAINT fk_articles_category_id FOREIGN KEY (category_id) REFERENCES categories(id);

ALTER TABLE comments
ADD CONSTRAINT fk_comments_article_id FOREIGN KEY (article_id) REFERENCES articles(id);

ALTER TABLE comments
ADD CONSTRAINT fk_comments_user_id FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE;

CREATE TYPE AUTHOR_TYPE AS ENUM (
  'Journalist',
  'Editor',
  'Columnist',
  'Copy Writer',
  'Content Writer',
  'Ghost Writer'
);

CREATE TABLE author (
  id BIGSERIAL PRIMARY KEY,
  user_id BIGINT UNIQUE REFERENCES "user"(id),
  typ AUTHOR_TYPE NOT NULL DEFAULT 'Journalist',
  pen_name VARCHAR(255) NOT NULL,
  bio TEXT,
  website VARCHAR(255),
  avatar_url VARCHAR(255),
  creation_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_time TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  creator_id BIGINT REFERENCES "user"(id),
  updater_id BIGINT REFERENCES "user"(id)
);